[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "geoworkflow"
version = "1.0.0"
description = "Comprehensive geospatial data processing workflow for African geospatial analysis"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = ["geospatial", "gis", "raster", "vector", "africa", "data-processing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Information Analysis",
]

# Minimal dependencies - assume conda provides the heavy lifting
dependencies = [
    "click>=8.0.0",
    "pydantic>=2.0.0", 
    "rich>=12.0.0",
    "tqdm>=4.64.0",
    "pyyaml>=6.0",
    "typer>=0.9.0",
    "marshmallow>=3.19.0",
    "jsonschema>=4.17.0",
    # Earth Engine dependencies (now included by default)
    "earthengine-api>=0.1.400",
    "google-cloud-storage>=2.10.0", 
    "google-auth>=2.15.0",
    "google-auth-oauthlib>=1.0.0",
]

[project.optional-dependencies]
# For users who want to install via pip only (not recommended but possible)
geospatial = [
    "geopandas>=0.13.0",
    "rasterio>=1.3.0", 
    "xarray>=2023.1.0",
    "matplotlib>=3.5.0",
    "contextily>=1.3.0",
    "shapely>=2.0.0",
    "pyproj>=3.4.0",
    "fiona>=1.8.0",
    "netcdf4>=1.6.0",
    "cartopy>=0.21.0",
    "folium>=0.14.0",
    "plotly>=5.0.0",
    "earthpy>=0.9.0",
    "rioxarray>=0.14.0",
    "geopy>=2.3.0",
    "rasterstats>=0.18.0",
]

dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
]

jupyter = [
    "jupyter>=1.0.0",
    "jupyterlab>=3.0.0",
    "ipywidgets>=8.0.0",
]

# Note: earth-engine dependencies are now included by default in the main dependencies list

# All pip dependencies (for pip-only users)
all = [
    # Geospatial dependencies
    "geopandas>=0.13.0",
    "rasterio>=1.3.0", 
    "xarray>=2023.1.0",
    "matplotlib>=3.5.0",
    "contextily>=1.3.0",
    "shapely>=2.0.0",
    "pyproj>=3.4.0",
    "fiona>=1.8.0",
    "netcdf4>=1.6.0",
    "cartopy>=0.21.0",
    "folium>=0.14.0",
    "plotly>=5.0.0",
    "earthpy>=0.9.0",
    "rioxarray>=0.14.0",
    "geopy>=2.3.0",
    "rasterstats>=0.18.0",
    # Dev dependencies
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    # Jupyter dependencies
    "jupyter>=1.0.0",
    "jupyterlab>=3.0.0",
    "ipywidgets>=8.0.0",
    # Note: Earth Engine dependencies are now included by default
]

[project.urls]
Homepage = "https://github.com/yourusername/geoworkflow"
Repository = "https://github.com/yourusername/geoworkflow"
Documentation = "https://geoworkflow.readthedocs.io/"
"Bug Tracker" = "https://github.com/yourusername/geoworkflow/issues"

[project.scripts]
geoworkflow = "geoworkflow.cli.main:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
geoworkflow = ["py.typed", "config/*.yaml", "templates/*.yaml"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "rasterio.*",
    "geopandas.*",
    "shapely.*",
    "contextily.*",
    "earthpy.*",
    "rasterstats.*",
]
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
source = ["src/geoworkflow"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Flake8 configuration (in setup.cfg or .flake8 file normally, but included here for completeness)
# Note: Flake8 doesn't read pyproject.toml natively, you'll need a .flake8 file or setup.cfg