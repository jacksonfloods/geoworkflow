name: Deploy Documentation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for proper versioning
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install mkdocs-material mkdocs-gen-files mkdocs-literate-nav mkdocs-section-index
          pip install mkdocstrings[python] mkdocs-autorefs
          pip install -e ".[docs]"
      
      - name: Generate directory structure
        run: |
          echo "Generating directory structure JSON and markdown..."
          python docs/guide/gen_ref_pages.py
          echo "âœ“ Structure files generated"
      
      - name: Build MkDocs (User Guide)
        run: |
          echo "Building MkDocs documentation..."
          mkdocs build --verbose --strict
          echo "âœ“ MkDocs build complete"
      
      - name: Build Sphinx (API Reference)
        run: |
          echo "Building Sphinx API documentation..."
          cd docs/api
          make html
          cd ../..
          echo "âœ“ Sphinx build complete"
      
      - name: Combine documentation
        run: |
          echo "Combining MkDocs and Sphinx outputs..."
          mkdir -p site_temp
          cp -r site/* site_temp/
          mkdir -p site_temp/api
          cp -r docs/api/build/html/* site_temp/api/
          rm -rf site
          mv site_temp site
          echo "âœ“ Documentation combined"
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site
      
      - name: Deploy to GitHub Pages
        if: github.event_name != 'pull_request'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          force_orphan: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'docs: deploy documentation [skip ci]'
      
      - name: Comment PR with preview
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ“š Documentation preview will be available after merge.'
            })
